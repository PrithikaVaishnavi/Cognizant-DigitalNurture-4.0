14 b. Write a java program to find the kth smallest element in an ArrayList.(13)
Input format
First Integer represents N value.
Next N values represent array elements.
Last value describes K.
Input
5
11 13 15 12 14
2
Output
K'th smallest element is 12

Answer:

import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;

public class KthSmallestElement {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Read the number of elements in the ArrayList
        int n = scanner.nextInt();

        // Create an ArrayList to store the elements
        ArrayList<Integer> arr = new ArrayList<>();

        // Read the elements into the ArrayList
        for (int i = 0; i < n; i++) {
            arr.add(scanner.nextInt());
        }

        // Read the value of k
        int k = scanner.nextInt();

        // Sort the ArrayList in ascending order
        Collections.sort(arr);

        // Get the kth smallest element
        int kthSmallest = arr.get(k - 1);

        // Output the result
        System.out.println("K'th smallest element is " + kthSmallest);
    }
}


14 b. Write a java program to find the kth largest element in an ArrayList. (13)
Input format
First Integer represents N value.
Next N values represent array elements.
Last value describes K.
Input
5
11 13 15 12 14
2
Output
K'th largest element is 14

Answer:

import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;

public class KthLargestElement {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Read the number of elements in the ArrayList
        int n = scanner.nextInt();

        // Create an ArrayList to store the elements
        ArrayList<Integer> arr = new ArrayList<>();

        // Read the elements into the ArrayList
        for (int i = 0; i < n; i++) {
            arr.add(scanner.nextInt());
        }

        // Read the value of k
        int k = scanner.nextInt();

        // Sort the ArrayList in descending order
        Collections.sort(arr, Collections.reverseOrder());

        // Get the kth largest element
        int kthLargest = arr.get(k - 1);

        // Output the result
        System.out.println("K'th largest element is " + kthLargest);
    }
}


14 b. Write a java program to find the maximum and minimum element in an 
ArrayList.(13)
Input format
First Integer represents N value.
Next N values represent array elements.
Input
5
11 13 15 12 14
Output
15 11

Answer:

import java.util.ArrayList;
import java.util.Scanner;

public class MaxMinElement {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Read the number of elements in the ArrayList
        int n = scanner.nextInt();

        // Create an ArrayList to store the elements
        ArrayList<Integer> arr = new ArrayList<>();

        // Read the elements into the ArrayList
        for (int i = 0; i < n; i++) {
            arr.add(scanner.nextInt());
        }

        // Find the maximum and minimum elements
        int max = Integer.MIN_VALUE;
        int min = Integer.MAX_VALUE;

        for (int num : arr) {
            if (num > max) {
                max = num;
            }
            if (num < min) {
                min = num;
            }
        }

        // Output the maximum and minimum elements
        System.out.println(max + " " + min);
    }
}

14 b. Write a program to get the student names and store in the ArrayList and search
for aparticular name and display it's position details. (13)
Input Format
The first line of input is an integer which corresponds to the number ‘n’ of names.
The n lines of input are the string which corresponds to the student name.
The last line of input is the string which corresponds to the student name to be searched.
Input
3
DSP
AIK
SAI
SAI
Output
SAI hall is found in the list at position 2

Answer:

import java.util.ArrayList;
import java.util.Scanner;

public class StudentNames {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Read the number of student names
        int n = scanner.nextInt();

        // Create an ArrayList to store the student names
        ArrayList<String> names = new ArrayList<>();

        // Read the student names and store them in the ArrayList
        for (int i = 0; i < n; i++) {
            names.add(scanner.next());
        }

        // Read the student name to be searched
        String nameToSearch = scanner.next();

        // Search for the name in the ArrayList
        int position = names.indexOf(nameToSearch);

        // Check if the name is found
        if (position != -1) {
            System.out.println(nameToSearch + " is found in the list at position " + (position + 1));
        } else {
            System.out.println(nameToSearch + " is not found in the list");
        }
    }
}
